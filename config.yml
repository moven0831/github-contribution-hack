# GitHub Contribution Hack Configuration

# List of repositories to make contributions to
# Format: username/repository-name
repositories:
  - github-contribution-hack/demo-repo1
  - github-contribution-hack/demo-repo2

# Minimum and maximum number of commits per repository per run
min_commits: 1
max_commits: 3

# Interval between contribution runs (in hours)
min_interval: 12
max_interval: 24

# Database settings
database:
  path: "contributions.db" # Path to the SQLite database file

# Performance Settings
performance:
  max_workers: 4          # Max concurrent threads for processing repositories
  parallel_repos: True    # Whether to process repositories in parallel

# General commit generation settings (used when MCP is disabled or fails)
commit_generation:
  ml_based_chance: 0.3       # Chance of using Markovify model for commit message (0.0 to 1.0)
  code_content_chance: 0.4   # Chance of generating code vs. doc content (0.0 to 1.0)
  file_types:                # Default file types for generated content
    - "txt"
    - "md"
    - "py"
    - "js"
    - "json"

split_commits:
  enabled: true
  max_lines_per_commit: 5
  message_prefix: "Automated commit" # Prefix for split commit messages

# MCP Integration Settings
mcp_integration:
  enabled: false # Set to true to enable AI-powered content generation
  api_key: null  # Your MCP API key. Can also be set via MCP_API_KEY environment variable.
  api_endpoint: "https://api.mcp.dev/v1"
  max_retries: 3
  request_timeout: 15 # seconds
  complexity: "low"   # Desired complexity of generated content: low, medium, high
  language_weights:
    python: 0.4
    javascript: 0.3
    markdown: 0.2
    text: 0.1
  repository_analysis: true # Allow MCP to analyze repo context (if supported by endpoint)
  content_quality: "medium" # Desired quality of content (if supported by endpoint)
  dry_run: false            # If true, MCP calls are simulated, no actual generation/commits by MCP

# Monitoring Settings
monitoring:
  enabled: true
  dashboard_refresh: 300  # seconds
  verification_checks: true
  retention_period: 30  # days

# Analytics Settings
analytics:
  streak_warning_threshold: 3
  commit_validation: true
  performance_metrics: true

# User Interface Settings
ui:
  web_interface:
    enabled: true
    host: "127.0.0.1"
    port: 5000
    auto_refresh: true
    dashboard_theme: "light"  # light, dark
  
  cli_interface:
    enabled: true
    color_scheme: "default"   # default, monochrome, vibrant
    refresh_rate: 2           # seconds
    compact_mode: false

# Visualization Settings
visualization:
  style: "ggplot"             # Default Matplotlib style for charts (e.g., ggplot, seaborn-v0_8-darkgrid)
  cache_dir: null             # Base directory for caching visualization images (null for system temp: e.g. /tmp or .cache/viz_output)
  heatmap:
    days: 365
    color_scheme: "Greens"    # Matplotlib Cmap for heatmap (e.g., Greens, YlGn, OrRd)
  streak_chart:
    include_predictions: true # (This key might not be used yet, but was in original)
  activity_timeline:
    days: 90
    include_average: true     # (This key might not be used yet, but was in original)
  repo_distribution:
    limit_repos: 10           # Max repositories to show in pie chart, others grouped

# Notification Settings
notifications:
  enabled: true
  manager:                             # Settings for the NotificationManager itself
    max_history: 100                 # Max number of notifications to keep in history
    level_routing:                   # Default channels to send notifications to, by level
      info: ["desktop"]              # e.g., send 'info' level to 'desktop'
      warning: ["desktop", "email"]
      error: ["email", "webhook"]    # Send 'error' to 'email' and 'webhook'
    throttle_rules:                  # Rules to prevent notification spam
      frequent_info:                 # A unique name for the rule
        pattern: ".*Info Notification.*" # Regex pattern to match notification title
        max_count: 10                # Max count of matching notifications
        time_window_seconds: 1800    # Within this time window (30 minutes)
      generic_error_throttle:
        pattern: ".*Error.*"
        max_count: 5
        time_window_seconds: 3600    # 1 hour
  email:
    enabled: false
    smtp_server: "smtp.example.com"
    smtp_port: 587
    username: "your_username"        # Your SMTP username
    password: "your_password"        # Your SMTP password (consider using env var for security)
    sender: "notifications@example.com"
    recipients:
      - "recipient1@example.com"
      # - "recipient2@example.com"
  webhook:
    enabled: false
    url: ""                          # URL for the webhook endpoint
    custom_headers: {}               # Optional custom headers, e.g., {"X-API-Key": "your-key"}
      # Content-Type: "application/json" # Default, usually not needed here
      # Authorization: "Bearer your_token_here"
  desktop:
    enabled: true                   # Requires 'notify2' or 'plyer' package

# Intelligent Patterns
intelligent_patterns: # This section might be partially superseded by mcp_integration or commit_generation settings
  enabled: true
  content_types:
    - documentation
    - code
    - config
  time_distribution: poisson
  markov_source: "commit_patterns.json" # Path to Markovify model
  max_commit_size: 100
  min_commit_size: 10 